{"uid":"b7a303b68f76031f","name":"test_crd_field_display_for_linking_contact","fullName":"tests.Additional_Functionalities.test_crd_field_display_for_linking_contact#test_crd_field_display_for_linking_contact","historyId":"8b6d422060f017a7718adf398655b55a","time":{"start":1745400379289,"stop":1745400447001,"duration":67712},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: Could not locate element with visible text: Dakota CRD#; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e07bad3e8d6af152034e904f655af35f\")>\nconfig = {'base_url': 'https://dakotanetworks--fuseupgrad.sandbox.my.salesforce-setup.com/', 'password': 'LOWYqfakgQ8oo', 'uat_...url': 'https://dakotanetworks--uat.sandbox.lightning.force.com/', 'uat_login_url': 'https://test.salesforce.com/', ...}\n\n    @pytest.mark.P1\n    @pytest.mark.Skipped\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.feature(\"Contact Linking\")\n    @allure.story('Ensure the \"Dakota Contact CRD\" field is available for linking contacts.')\n    def test_crd_field_display_for_linking_contact(driver, config):\n        # Navigate to login page\n        driver.get(config[\"base_url\"])\n        wait = WebDriverWait(driver, 60, poll_frequency=0.5)\n    \n        try:\n            # Perform login\n            username = wait.until(EC.element_to_be_clickable((By.ID, \"username\")))\n            username.send_keys(config[\"username\"])\n            password = wait.until(EC.element_to_be_clickable((By.ID, \"password\")))\n            password.send_keys(config[\"password\"])\n            login_button = wait.until(EC.element_to_be_clickable((By.ID, \"Login\")))\n            time.sleep(2)\n            login_button.click()\n    \n            # Wait for URL change\n            wait.until(EC.url_contains(\"lightning.force.com\"))\n    \n            # Verify Login\n            try:\n                WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.XPATH, \"//one-app-nav-bar-item-root[2]\"))).click()\n            except Exception as e:\n                pytest.skip(f\"Skipping test due to unexpected login error: {type(e).__name__}\")\n                driver.quit()\n    \n        except Exception as e:\n            pytest.skip(f\"Skipping test due to unexpected login error: {type(e).__name__}\")\n            driver.quit()\n    \n    \n        with allure.step(\"Waiting for Document Ready State to be Complete\"):\n            WebDriverWait(driver, 90).until(\n                lambda d: print(\"Current Ready State:\", d.execute_script('return document.readyState')) or\n                          d.execute_script('return document.readyState') == 'complete'\n            )\n        print(\"Document Ready State is COMPLETE!\")\n        time.sleep(1)\n    \n        # Navigate to installed pakages setup\n        driver.get(f\"{config['base_url']}lightning/n/Marketplace__Dakota_Search\")\n    \n        # Select the Contacts tab and print its text\n        tab = wait.until(EC.element_to_be_clickable((By.XPATH, \"//li[@title='Contacts']\")))\n        print(f\"Current Tab : {tab.text}\")\n        tab.click()\n    \n        dropdown = wait.until(EC.element_to_be_clickable((By.XPATH, \"(//select[@name='DisplayCriteria'])[2]\")))\n        dropdown_option = Select(dropdown)\n        dropdown_option.select_by_visible_text(\"Unlinked Contacts\")\n        time.sleep(20)\n    \n    \n        # Click the Search button and print its text\n        search_button = wait.until(EC.visibility_of_element_located(\n            (By.XPATH, \"//div[@class='buttonDiv']//button[@title='Search'][normalize-space()='Search']\")\n        ))\n        search_button.click()\n    \n        # Click on ALL CHECKBOX\n        all_box = wait.until(EC.element_to_be_clickable((By.XPATH, \"(//span[contains(@class,'slds-checkbox_faux')])[2]\")))\n        all_box.click()\n    \n        # Click on linked account\n        dropdown = wait.until(EC.element_to_be_clickable((By.XPATH, \"//select[@name='MassUploadActions']\")))\n        dropdown_option = Select(dropdown)\n        dropdown_option.select_by_visible_text(\"Link Selected Contacts to Existing Contacts\")\n    \n        # Click on linked account\n        dropdown = wait.until(EC.element_to_be_clickable((By.XPATH, \"(//select[@class='slds-select'])[6]\")))\n        dropdown_option = Select(dropdown)\n>       dropdown_option.select_by_visible_text(\"Dakota CRD#\")\n\ntests\\Additional_Functionalities\\test_crd_field_display_for_linking_contact.py:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.select.Select object at 0x0000027996ED1810>\ntext = 'Dakota CRD#'\n\n    def select_by_visible_text(self, text: str) -> None:\n        \"\"\"Select all options that display text matching the argument. That is,\n        when given \"Bar\" this would select an option like:\n    \n         <option value=\"foo\">Bar</option>\n    \n        :Args:\n         - text - The visible text to match against\n    \n         throws NoSuchElementException If there is no option with specified text in SELECT\n        \"\"\"\n        xpath = f\".//option[normalize-space(.) = {self._escape_string(text)}]\"\n        opts = self._el.find_elements(By.XPATH, xpath)\n        matched = False\n        for opt in opts:\n            self._set_selected(opt)\n            if not self.is_multiple:\n                return\n            matched = True\n    \n        if len(opts) == 0 and \" \" in text:\n            sub_string_without_space = self._get_longest_token(text)\n            if sub_string_without_space == \"\":\n                candidates = self.options\n            else:\n                xpath = f\".//option[contains(.,{self._escape_string(sub_string_without_space)})]\"\n                candidates = self._el.find_elements(By.XPATH, xpath)\n            for candidate in candidates:\n                if text == candidate.text:\n                    self._set_selected(candidate)\n                    if not self.is_multiple:\n                        return\n                    matched = True\n    \n        if not matched:\n>           raise NoSuchElementException(f\"Could not locate element with visible text: {text}\")\nE           selenium.common.exceptions.NoSuchElementException: Message: Could not locate element with visible text: Dakota CRD#; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\select.py:137: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":true,"beforeStages":[{"name":"_session_faker","time":{"start":1745400377639,"stop":1745400377640,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"config","time":{"start":1745400377640,"stop":1745400377640,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"driver","time":{"start":1745400377640,"stop":1745400379288,"duration":1648},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: Could not locate element with visible text: Dakota CRD#; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e07bad3e8d6af152034e904f655af35f\")>\nconfig = {'base_url': 'https://dakotanetworks--fuseupgrad.sandbox.my.salesforce-setup.com/', 'password': 'LOWYqfakgQ8oo', 'uat_...url': 'https://dakotanetworks--uat.sandbox.lightning.force.com/', 'uat_login_url': 'https://test.salesforce.com/', ...}\n\n    @pytest.mark.P1\n    @pytest.mark.Skipped\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.feature(\"Contact Linking\")\n    @allure.story('Ensure the \"Dakota Contact CRD\" field is available for linking contacts.')\n    def test_crd_field_display_for_linking_contact(driver, config):\n        # Navigate to login page\n        driver.get(config[\"base_url\"])\n        wait = WebDriverWait(driver, 60, poll_frequency=0.5)\n    \n        try:\n            # Perform login\n            username = wait.until(EC.element_to_be_clickable((By.ID, \"username\")))\n            username.send_keys(config[\"username\"])\n            password = wait.until(EC.element_to_be_clickable((By.ID, \"password\")))\n            password.send_keys(config[\"password\"])\n            login_button = wait.until(EC.element_to_be_clickable((By.ID, \"Login\")))\n            time.sleep(2)\n            login_button.click()\n    \n            # Wait for URL change\n            wait.until(EC.url_contains(\"lightning.force.com\"))\n    \n            # Verify Login\n            try:\n                WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.XPATH, \"//one-app-nav-bar-item-root[2]\"))).click()\n            except Exception as e:\n                pytest.skip(f\"Skipping test due to unexpected login error: {type(e).__name__}\")\n                driver.quit()\n    \n        except Exception as e:\n            pytest.skip(f\"Skipping test due to unexpected login error: {type(e).__name__}\")\n            driver.quit()\n    \n    \n        with allure.step(\"Waiting for Document Ready State to be Complete\"):\n            WebDriverWait(driver, 90).until(\n                lambda d: print(\"Current Ready State:\", d.execute_script('return document.readyState')) or\n                          d.execute_script('return document.readyState') == 'complete'\n            )\n        print(\"Document Ready State is COMPLETE!\")\n        time.sleep(1)\n    \n        # Navigate to installed pakages setup\n        driver.get(f\"{config['base_url']}lightning/n/Marketplace__Dakota_Search\")\n    \n        # Select the Contacts tab and print its text\n        tab = wait.until(EC.element_to_be_clickable((By.XPATH, \"//li[@title='Contacts']\")))\n        print(f\"Current Tab : {tab.text}\")\n        tab.click()\n    \n        dropdown = wait.until(EC.element_to_be_clickable((By.XPATH, \"(//select[@name='DisplayCriteria'])[2]\")))\n        dropdown_option = Select(dropdown)\n        dropdown_option.select_by_visible_text(\"Unlinked Contacts\")\n        time.sleep(20)\n    \n    \n        # Click the Search button and print its text\n        search_button = wait.until(EC.visibility_of_element_located(\n            (By.XPATH, \"//div[@class='buttonDiv']//button[@title='Search'][normalize-space()='Search']\")\n        ))\n        search_button.click()\n    \n        # Click on ALL CHECKBOX\n        all_box = wait.until(EC.element_to_be_clickable((By.XPATH, \"(//span[contains(@class,'slds-checkbox_faux')])[2]\")))\n        all_box.click()\n    \n        # Click on linked account\n        dropdown = wait.until(EC.element_to_be_clickable((By.XPATH, \"//select[@name='MassUploadActions']\")))\n        dropdown_option = Select(dropdown)\n        dropdown_option.select_by_visible_text(\"Link Selected Contacts to Existing Contacts\")\n    \n        # Click on linked account\n        dropdown = wait.until(EC.element_to_be_clickable((By.XPATH, \"(//select[@class='slds-select'])[6]\")))\n        dropdown_option = Select(dropdown)\n>       dropdown_option.select_by_visible_text(\"Dakota CRD#\")\n\ntests\\Additional_Functionalities\\test_crd_field_display_for_linking_contact.py:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.select.Select object at 0x0000027996ED1810>\ntext = 'Dakota CRD#'\n\n    def select_by_visible_text(self, text: str) -> None:\n        \"\"\"Select all options that display text matching the argument. That is,\n        when given \"Bar\" this would select an option like:\n    \n         <option value=\"foo\">Bar</option>\n    \n        :Args:\n         - text - The visible text to match against\n    \n         throws NoSuchElementException If there is no option with specified text in SELECT\n        \"\"\"\n        xpath = f\".//option[normalize-space(.) = {self._escape_string(text)}]\"\n        opts = self._el.find_elements(By.XPATH, xpath)\n        matched = False\n        for opt in opts:\n            self._set_selected(opt)\n            if not self.is_multiple:\n                return\n            matched = True\n    \n        if len(opts) == 0 and \" \" in text:\n            sub_string_without_space = self._get_longest_token(text)\n            if sub_string_without_space == \"\":\n                candidates = self.options\n            else:\n                xpath = f\".//option[contains(.,{self._escape_string(sub_string_without_space)})]\"\n                candidates = self._el.find_elements(By.XPATH, xpath)\n            for candidate in candidates:\n                if text == candidate.text:\n                    self._set_selected(candidate)\n                    if not self.is_multiple:\n                        return\n                    matched = True\n    \n        if not matched:\n>           raise NoSuchElementException(f\"Could not locate element with visible text: {text}\")\nE           selenium.common.exceptions.NoSuchElementException: Message: Could not locate element with visible text: Dakota CRD#; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\select.py:137: NoSuchElementException","steps":[{"name":"Waiting for Document Ready State to be Complete","time":{"start":1745400408378,"stop":1745400408398,"duration":20},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"stepsCount":1},"afterStages":[{"name":"driver::0","time":{"start":1745400447428,"stop":1745400449987,"duration":2559},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"story","value":"Ensure the \"Dakota Contact CRD\" field is available for linking contacts."},{"name":"severity","value":"critical"},{"name":"feature","value":"Contact Linking"},{"name":"tag","value":"Skipped"},{"name":"tag","value":"P1"},{"name":"parentSuite","value":"tests.Additional_Functionalities"},{"name":"suite","value":"test_crd_field_display_for_linking_contact"},{"name":"host","value":"RT-LT-597"},{"name":"thread","value":"9800-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.Additional_Functionalities.test_crd_field_display_for_linking_contact"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[{"uid":"8f271400cbb14671","status":"skipped","statusDetails":"Skipped: Skipping test due to unexpected login error: NoSuchWindowException","time":{"start":1745399871174,"stop":1745399872487,"duration":1313}},{"uid":"5fbdc64dc6823ad5","status":"passed","time":{"start":1745321012252,"stop":1745321093545,"duration":81293}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":1,"passed":1,"unknown":0,"total":3},"items":[{"uid":"126f5a1d510dbcc7","reportUrl":"http://localhost:9090/job/SF%20APP%20Automation/26/allure/#testresult/126f5a1d510dbcc7","status":"skipped","statusDetails":"Skipped: Skipping test due to unexpected login error: NoSuchWindowException","time":{"start":1745399871174,"stop":1745399872487,"duration":1313}},{"uid":"29d92bdb431b3750","reportUrl":"http://localhost:9090/job/SF%20APP%20Automation/24/allure/#testresult/29d92bdb431b3750","status":"passed","time":{"start":1745321012252,"stop":1745321093545,"duration":81293}}]},"tags":["P1","Skipped"]},"source":"b7a303b68f76031f.json","parameterValues":[]}