{"name": "test_conferences_tab_search_functionality", "status": "passed", "statusDetails": {"message": "AssertionError: Conference name '35th Annual Institutional Investor Conference 2025' does not match 'MC-876 Allocator Verified'\nassert 'mc-876 allocator verified' in '35th annual institutional investor conference 2025'\n +  where 'mc-876 allocator verified' = <built-in method lower of str object at 0x000001A639A6F960>()\n +    where <built-in method lower of str object at 0x000001A639A6F960> = 'MC-876 Allocator Verified'.lower", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"728808a713ac0f846f6115c49487e560\")>\nconfig = {'base_url': 'https://dakotanetworks--sfapptest.sandbox.lightning.force.com/', 'password': 'Rolus@123', 'uat_base_url': 'https://dakotanetworks--uat.sandbox.lightning.force.com/', 'uat_login_url': 'https://test.salesforce.com/', ...}\n\n    @pytest.mark.regression\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.feature(\"Search Functionality\")\n    @allure.story('Confirm accurate results when searching by conference name.')\n    def test_conferences_tab_search_functionality(driver, config):\n        # Navigate to login page\n        driver.get(config[\"base_url\"])\n        driver.delete_all_cookies()\n        wait = WebDriverWait(driver, 60, poll_frequency=0.5)\n    \n        try:\n            # Perform login\n            username = wait.until(EC.element_to_be_clickable((By.ID, \"username\")))\n            username.send_keys(config[\"username\"])\n            password = wait.until(EC.element_to_be_clickable((By.ID, \"password\")))\n            password.send_keys(config[\"password\"])\n            login_button = wait.until(EC.element_to_be_clickable((By.ID, \"Login\")))\n            time.sleep(2)\n            login_button.click()\n            time.sleep(3)\n    \n            # Wait for URL change\n            wait.until(EC.url_contains(\"lightning.force.com\"))\n    \n            # Verify Login\n            try:\n                WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.XPATH, \"//one-app-nav-bar-item-root[2]\"))).click()\n            except Exception as e:\n                pytest.skip(f\"Skipping test due to unexpected login error: {type(e).__name__}\")\n                driver.quit()\n    \n        except Exception as e:\n            pytest.skip(f\"Skipping test due to unexpected login error: {type(e).__name__}\")\n            driver.quit()\n    \n    \n        with allure.step(\"Waiting for Document Ready State to be Complete\"):\n            WebDriverWait(driver, 90).until(\n                lambda d: print(\"Current Ready State:\", d.execute_script('return document.readyState')) or\n                          d.execute_script('return document.readyState') == 'complete'\n            )\n        print(\"Document Ready State is COMPLETE!\")\n        time.sleep(1)\n    \n    \n        # Click on Marketplace Search button\n        try:\n            btn = WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.XPATH, \"//one-app-nav-bar-item-root[5]\")))\n            btn.click()\n        except (NoSuchElementException, TimeoutException) as e:\n            print(f\"Message: {type(e).__name__}\")\n        time.sleep(1)\n    \n    \n        # Navigate to Conferences Page\n        driver.get(f\"{config['base_url']}lightning/n/Marketplace__Conferences\")\n    \n    \n        # Verify Conference Page Loaded\n        try:\n            element = wait.until(EC.presence_of_element_located((By.XPATH, \"//tbody/tr[1]/th[1]\")))\n            assert element.is_displayed(), \"Conference list is not displayed\"\n        except TimeoutException:\n            pytest.fail(\"Conference list not loaded in time\")\n    \n        # 1. Collect all Conference Names\n        all_names_elements = wait.until(\n            EC.presence_of_all_elements_located((By.XPATH, \"//tbody/tr/th\"))\n        )\n    \n        all_names = [elem.text.strip() for elem in all_names_elements if elem.text.strip()]\n        assert len(all_names) >= 3, \"Not enough Conference Names to perform test!\"\n    \n        # 2. Randomly select 3 unique names\n        random_names = random.sample(all_names, 3)  # Ensures no duplicates\n    \n        for name in random_names:\n            print(f\"Testing FULL search for Conference: {name}\")\n    \n            # FULL SEARCH\n            search_box = wait.until(EC.presence_of_element_located((By.XPATH, \"//input[@name='searchValue']\")))\n            search_box.clear()\n            search_box.send_keys(name)  # Full name\n            search_box.send_keys(Keys.ENTER)\n            time.sleep(3)\n    \n            conf_names = wait.until(EC.presence_of_all_elements_located((By.XPATH, \"//tbody/tr/th\")))\n    \n            # Screenshot & Allure attachment\n            screenshot = driver.get_screenshot_as_png()\n            allure.attach(screenshot, name=f\"{name} - Full Search Result\", attachment_type=allure.attachment_type.PNG)\n    \n            assert len(conf_names) > 0, \"No conference names found in FULL search results\"\n    \n            # Assertion for FULL search\n            for conf in conf_names:\n                conf_text = conf.text.strip().lower()\n>               assert name.lower() in conf_text, f\"Conference name '{conf.text}' does not match '{name}'\"\nE               AssertionError: Conference name '35th Annual Institutional Investor Conference 2025' does not match 'MC-876 Allocator Verified'\nE               assert 'mc-876 allocator verified' in '35th annual institutional investor conference 2025'\nE                +  where 'mc-876 allocator verified' = <built-in method lower of str object at 0x000001A639A6F960>()\nE                +    where <built-in method lower of str object at 0x000001A639A6F960> = 'MC-876 Allocator Verified'.lower\n\ntests\\Conferences_Tab\\test_conferences_tab_search_functionality.py:120: AssertionError"}, "steps": [{"name": "Waiting for Document Ready State to be Complete", "status": "passed", "start": 1748257688998, "stop": 1748257689030}], "attachments": [{"name": "MC-876 Allocator Verified - Full Search Result", "source": "e18d57f6-a0ca-4df1-bf11-6fdae4610a4a-attachment.png", "type": "image/png"}], "start": 1748257659979, "stop": 1748257705240, "uuid": "77ec8450-9d49-401d-bd6c-5504e3449b80", "historyId": "11b4bb75496affc7a047a51452b3bcb4", "testCaseId": "11b4bb75496affc7a047a51452b3bcb4", "fullName": "tests.Conferences_Tab.test_conferences_tab_search_functionality#test_conferences_tab_search_functionality", "labels": [{"name": "feature", "value": "Search Functionality"}, {"name": "story", "value": "Confirm accurate results when searching by conference name."}, {"name": "severity", "value": "critical"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "tests.Conferences_Tab"}, {"name": "suite", "value": "test_conferences_tab_search_functionality"}, {"name": "host", "value": "RT-LT-597"}, {"name": "thread", "value": "21108-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.Conferences_Tab.test_conferences_tab_search_functionality"}]}