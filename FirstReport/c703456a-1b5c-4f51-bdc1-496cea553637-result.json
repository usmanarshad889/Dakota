{"name": "test_job_change_creation_of_account", "status": "passed", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF6C3B4CF25+75717]\n\tGetHandleVerifier [0x00007FF6C3B4CF80+75808]\n\t(No symbol) [0x00007FF6C3918F9A]\n\t(No symbol) [0x00007FF6C396F4C6]\n\t(No symbol) [0x00007FF6C396F77C]\n\t(No symbol) [0x00007FF6C39C2577]\n\t(No symbol) [0x00007FF6C39973BF]\n\t(No symbol) [0x00007FF6C39BF39C]\n\t(No symbol) [0x00007FF6C3997153]\n\t(No symbol) [0x00007FF6C3960421]\n\t(No symbol) [0x00007FF6C39611B3]\n\tGetHandleVerifier [0x00007FF6C3E4D6FD+3223453]\n\tGetHandleVerifier [0x00007FF6C3E47CA2+3200322]\n\tGetHandleVerifier [0x00007FF6C3E65AD3+3322739]\n\tGetHandleVerifier [0x00007FF6C3B669FA+180890]\n\tGetHandleVerifier [0x00007FF6C3B6E0FF+211359]\n\tGetHandleVerifier [0x00007FF6C3B55274+109332]\n\tGetHandleVerifier [0x00007FF6C3B55422+109762]\n\tGetHandleVerifier [0x00007FF6C3B3BA39+4825]\n\tBaseThreadInitThunk [0x00007FF90625E8D7+23]\n\tRtlUserThreadStart [0x00007FF906EBC5DC+44]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a25c03e20ec1eb5109a545229b693b6f\")>\nconfig = {'base_url': 'https://dakotanetworks--sfapptest.sandbox.lightning.force.com/', 'password': 'Rolus@123', 'uat_base_url': 'https://dakotanetworks--uat.sandbox.lightning.force.com/', 'uat_login_url': 'https://test.salesforce.com/', ...}\n\n    @pytest.mark.P1\n    @pytest.mark.release_two\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.feature(\"Dakota Home Tab - Job Changes (Create Contact)\")\n    @allure.story(\"Test Creation of contacts directly from Job Changes.\")\n    def test_job_change_creation_of_account(driver, config):\n        driver.get(config[\"base_url\"])\n        driver.delete_all_cookies()\n        wait = WebDriverWait(driver, 30, poll_frequency=0.5)\n    \n        # Login block\n        try:\n            wait.until(EC.element_to_be_clickable((By.ID, \"username\"))).send_keys(config[\"username\"])\n            wait.until(EC.element_to_be_clickable((By.ID, \"password\"))).send_keys(config[\"password\"])\n            time.sleep(1)\n            wait.until(EC.element_to_be_clickable((By.ID, \"Login\"))).click()\n        except Exception as e:\n            driver.quit()\n            pytest.skip(f\"Skipping test due to login failure: {type(e).__name__}\")\n    \n        # Confirm login success\n        try:\n            wait.until(EC.presence_of_element_located((By.XPATH, \"//button[@title='App Launcher']\")))\n            print(\"App Launcher is found\")\n        except Exception as e:\n            driver.quit()\n            pytest.skip(f\"Skipping test due to missing App Launcher: {type(e).__name__}\")\n    \n        # Navigate to Dakota Home Page\n        driver.get(f\"{config['base_url']}lightning/n/Marketplace__Home\")\n    \n        wait = WebDriverWait(driver, 60, poll_frequency=0.5)\n    \n        # Print Section name\n        btn = wait.until(EC.element_to_be_clickable((By.XPATH, \"(//a[@class='slds-tabs_default__link'])[1]\")))\n        print(f\"Section Name : {btn.text}\")\n    \n        # Wait for records display\n        try:\n            WebDriverWait(driver, 20).until(EC.presence_of_all_elements_located((By.XPATH, \"(//td[@data-label='Last Updated Date'])[1]\")))\n            time.sleep(1)\n        except (NoSuchElementException, TimeoutException) as e:\n            print(f\"Message: {type(e).__name__}\")\n    \n    \n        # Locate all Contacts name\n        xpath = '''/html[1]/body[1]/div[4]/div[1]/section[1]/div[1]/div[2]/div[2]/div[1]/div[1]/div[1]/div[1]/div[1]/marketplace-dakota-home-page-main[1]/div[1]/div[1]/div[1]/c-dakota-contact-updates[1]/div[1]/lightning-tabset[1]/div[1]/slot[1]/lightning-tab[1]/slot[1]/c-dakota-job-and-role-changes[1]/div[1]/div[1]/c-custom-datatable[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr/td[2]/lightning-primitive-cell-factory[1]/span[1]/div[1]/lightning-primitive-custom-cell[1]/c-custom-link-field[1]/lightning-button[1]/button[1]'''\n        elements = driver.find_elements(By.XPATH, xpath)\n    \n        print(f\" Total elements present : {len(elements)}\")\n    \n        if len(elements) == 0:\n            pytest.skip(\"No Account or Contact found that requires creation or linking. Skipping test case.\")\n    \n    \n        # Click on first unlinked account\n        for element in elements:\n            try:\n                # Skip elements with zero size\n                size = element.size\n                if size['width'] == 0 or size['height'] == 0:\n                    print(\"Skipping element with zero size\")\n                    continue\n                driver.execute_script(\"arguments[0].scrollIntoView({behavior: 'smooth', block: 'center'});\", element)\n                time.sleep(2)\n                account_name = element.text.strip()\n                element.click()\n    \n                # Check if the account has right permission or not\n                try:\n                    toast = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, \"//span[@class='toastMessage forceActionsText']\")))\n                    toast_message = toast.text\n                    # Check if the message is \"You do not have permission rights to access this record.\"\n                    if toast_message == \"You do not have permission rights to access this record.\":\n                        print(f\"Permission error for account: {account_name}. Trying next element...\")\n                        time.sleep(5)\n                        continue  # Skip to the next element in the loop\n                except (NoSuchElementException, TimeoutException) as e:\n                    print(f\"Error: {type(e).__name__}\")\n    \n            except (NoSuchElementException, TimeoutException) as e:\n                print(f\"Error: {type(e).__name__} while clicking {element.text}\")\n            break\n    \n    \n        # Click on Create Contact\n        link_btn = wait.until(EC.element_to_be_clickable((By.XPATH, \"//button[normalize-space()='CreateÂ Contact']\")))\n        link_btn.click()\n    \n        # Select Account Name\n>       input_field = wait.until(EC.visibility_of_element_located((By.XPATH, \"//input[@placeholder='Search Accounts...']\")))\n\ntests\\Dakota_Home_Tab\\test_job_change_create_contact.py:131: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a25c03e20ec1eb5109a545229b693b6f\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x000001A639BF11C0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6C3B4CF25+75717]\nE       \tGetHandleVerifier [0x00007FF6C3B4CF80+75808]\nE       \t(No symbol) [0x00007FF6C3918F9A]\nE       \t(No symbol) [0x00007FF6C396F4C6]\nE       \t(No symbol) [0x00007FF6C396F77C]\nE       \t(No symbol) [0x00007FF6C39C2577]\nE       \t(No symbol) [0x00007FF6C39973BF]\nE       \t(No symbol) [0x00007FF6C39BF39C]\nE       \t(No symbol) [0x00007FF6C3997153]\nE       \t(No symbol) [0x00007FF6C3960421]\nE       \t(No symbol) [0x00007FF6C39611B3]\nE       \tGetHandleVerifier [0x00007FF6C3E4D6FD+3223453]\nE       \tGetHandleVerifier [0x00007FF6C3E47CA2+3200322]\nE       \tGetHandleVerifier [0x00007FF6C3E65AD3+3322739]\nE       \tGetHandleVerifier [0x00007FF6C3B669FA+180890]\nE       \tGetHandleVerifier [0x00007FF6C3B6E0FF+211359]\nE       \tGetHandleVerifier [0x00007FF6C3B55274+109332]\nE       \tGetHandleVerifier [0x00007FF6C3B55422+109762]\nE       \tGetHandleVerifier [0x00007FF6C3B3BA39+4825]\nE       \tBaseThreadInitThunk [0x00007FF90625E8D7+23]\nE       \tRtlUserThreadStart [0x00007FF906EBC5DC+44]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "start": 1748260573412, "stop": 1748260689555, "uuid": "c78a7f4d-5ede-467f-82f2-a5fcfa9b8573", "historyId": "dbf2ffba9c7a26caea7ba18747975837", "testCaseId": "dbf2ffba9c7a26caea7ba18747975837", "fullName": "tests.Dakota_Home_Tab.test_job_change_create_contact#test_job_change_creation_of_account", "labels": [{"name": "feature", "value": "Dakota Home Tab - Job Changes (Create Contact)"}, {"name": "story", "value": "Test Creation of contacts directly from Job Changes."}, {"name": "severity", "value": "critical"}, {"name": "tag", "value": "release_two"}, {"name": "tag", "value": "P1"}, {"name": "parentSuite", "value": "tests.Dakota_Home_Tab"}, {"name": "suite", "value": "test_job_change_create_contact"}, {"name": "host", "value": "RT-LT-597"}, {"name": "thread", "value": "21108-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.Dakota_Home_Tab.test_job_change_create_contact"}]}