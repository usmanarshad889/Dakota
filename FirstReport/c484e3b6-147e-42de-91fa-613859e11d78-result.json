{"name": "test_role_change_creation_of_account", "status": "passed", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button lwc-4kb6kaqheak=\"\" class=\"slds-combobox__input slds-input_faux fix-slds-input_faux slds-combobox__input-value\" id=\"combobox-button-5793\" type=\"button\" aria-expanded=\"false\" aria-haspopup=\"listbox\" name=\"salutation\" role=\"combobox\" data-value=\"--None--\" aria-disabled=\"false\" aria-label=\"Salutation\" aria-required=\"false\" part=\"input-button\" aria-controls=\"dropdown-element-5793\">...</button> is not clickable at point (567, 379). Other element would receive the click: <fieldset class=\"slds-form-element slds-no-space\" data-aura-rendered-by=\"728:0\">...</fieldset>\n  (Session info: chrome=136.0.7103.114)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6C3B4CF25+75717]\n\tGetHandleVerifier [0x00007FF6C3B4CF80+75808]\n\t(No symbol) [0x00007FF6C3918F9A]\n\t(No symbol) [0x00007FF6C3977439]\n\t(No symbol) [0x00007FF6C3974DF2]\n\t(No symbol) [0x00007FF6C3971EA1]\n\t(No symbol) [0x00007FF6C3970DA1]\n\t(No symbol) [0x00007FF6C3962394]\n\t(No symbol) [0x00007FF6C399737A]\n\t(No symbol) [0x00007FF6C3961C46]\n\t(No symbol) [0x00007FF6C3997590]\n\t(No symbol) [0x00007FF6C39BF39C]\n\t(No symbol) [0x00007FF6C3997153]\n\t(No symbol) [0x00007FF6C3960421]\n\t(No symbol) [0x00007FF6C39611B3]\n\tGetHandleVerifier [0x00007FF6C3E4D6FD+3223453]\n\tGetHandleVerifier [0x00007FF6C3E47CA2+3200322]\n\tGetHandleVerifier [0x00007FF6C3E65AD3+3322739]\n\tGetHandleVerifier [0x00007FF6C3B669FA+180890]\n\tGetHandleVerifier [0x00007FF6C3B6E0FF+211359]\n\tGetHandleVerifier [0x00007FF6C3B55274+109332]\n\tGetHandleVerifier [0x00007FF6C3B55422+109762]\n\tGetHandleVerifier [0x00007FF6C3B3BA39+4825]\n\tBaseThreadInitThunk [0x00007FF90625E8D7+23]\n\tRtlUserThreadStart [0x00007FF906EBC5DC+44]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"52cf8a2cfebd8c5cfdd68ae93b8a62a3\")>\nconfig = {'base_url': 'https://dakotanetworks--sfapptest.sandbox.lightning.force.com/', 'password': 'Rolus@123', 'uat_base_url': 'https://dakotanetworks--uat.sandbox.lightning.force.com/', 'uat_login_url': 'https://test.salesforce.com/', ...}\n\n    @pytest.mark.P1\n    @pytest.mark.release_two\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.feature(\"Dakota Home Tab - Role Changes (Create Contact)\")\n    @allure.story(\"Test Creation of contacts directly from Role Changes.\")\n    def test_role_change_creation_of_account(driver, config):\n        driver.get(config[\"base_url\"])\n        driver.delete_all_cookies()\n        wait = WebDriverWait(driver, 30, poll_frequency=0.5)\n    \n        # Login block\n        try:\n            wait.until(EC.element_to_be_clickable((By.ID, \"username\"))).send_keys(config[\"username\"])\n            wait.until(EC.element_to_be_clickable((By.ID, \"password\"))).send_keys(config[\"password\"])\n            time.sleep(1)\n            wait.until(EC.element_to_be_clickable((By.ID, \"Login\"))).click()\n        except Exception as e:\n            driver.quit()\n            pytest.skip(f\"Skipping test due to login failure: {type(e).__name__}\")\n    \n        # Confirm login success\n        try:\n            wait.until(EC.presence_of_element_located((By.XPATH, \"//button[@title='App Launcher']\")))\n            print(\"App Launcher is found\")\n        except Exception as e:\n            driver.quit()\n            pytest.skip(f\"Skipping test due to missing App Launcher: {type(e).__name__}\")\n    \n        # Navigate to Dakota Home Page\n        driver.get(f\"{config['base_url']}lightning/n/Marketplace__Home\")\n    \n        wait = WebDriverWait(driver, 60, poll_frequency=0.5)\n    \n        # Print Section name\n        btn = wait.until(EC.element_to_be_clickable((By.XPATH, \"//li[@title='Role Changes']\")))\n        print(f\"Section Name : {btn.text}\")\n        btn.click()\n    \n        # Wait for records display\n        try:\n            WebDriverWait(driver, 20).until(EC.presence_of_all_elements_located((By.XPATH, \"(//td[@data-label='Last Updated Date'])[1]\")))\n            time.sleep(1)\n        except (NoSuchElementException, TimeoutException) as e:\n            print(f\"Message: {type(e).__name__}\")\n    \n        # Locate all Contacts name\n        xpath = '''/html[1]/body[1]/div[4]/div[1]/section[1]/div[1]/div[2]/div[2]/div[1]/div[1]/div[1]/div[1]/div[1]/marketplace-dakota-home-page-main[1]/div[1]/div[1]/div[1]/c-dakota-contact-updates[1]/div[1]/lightning-tabset[1]/div[1]/slot[1]/lightning-tab[2]/slot[1]/c-dakota-job-and-role-changes[1]/div[1]/div[1]/c-custom-datatable[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr/td[2]/lightning-primitive-cell-factory[1]/span[1]/div[1]/lightning-primitive-custom-cell[1]/c-custom-link-field[1]/lightning-button[1]/button[1]'''\n        elements = driver.find_elements(By.XPATH, xpath)\n    \n        print(f\" Total elements present : {len(elements)}\")\n    \n        if len(elements) == 0:\n            pytest.skip(\"No Account or Contact found that requires creation or linking. Skipping test case.\")\n    \n        # Click on first found contact\n        for element in elements:\n            try:\n                driver.execute_script(\"arguments[0].scrollIntoView({behavior: 'smooth', block: 'center'});\", element)\n                time.sleep(1)\n                contact_name = element.text.strip()\n                element.click()\n                print(f\"Clicked Contact Name: {contact_name}\")\n            except (NoSuchElementException, TimeoutException) as e:\n                print(f\"Error: {type(e).__name__} while clicking {element.text}\")\n            break  # Click only the first element\n    \n    \n        # Click on Create Contact\n        link_btn = wait.until(EC.element_to_be_clickable((By.XPATH, \"//button[normalize-space()='CreateÂ Contact']\")))\n        link_btn.click()\n    \n        # Select Account Name\n        input_field = wait.until(EC.visibility_of_element_located((By.XPATH, \"//input[@placeholder='Search Accounts...']\")))\n        input_field.clear()\n        input_field.send_keys(\"Test Contacts\")\n        dropdown_option = wait.until(EC.visibility_of_element_located((By.XPATH, \"(//lightning-base-combobox-item[@role='option'])[2]\")))\n        dropdown_option.click()\n    \n        # Select name - Salutation\n        salutation_field = wait.until(EC.element_to_be_clickable((By.XPATH, \"//button[@name='salutation']\")))\n>       salutation_field.click()\n\ntests\\Dakota_Home_Tab\\test_role_change_create_contact.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:121: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:574: in _execute\n    return self._parent.execute(command, params)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001A636DC0190>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...C3B3BA39+4825]\\\\n\\\\tBaseThreadInitThunk [0x00007FF90625E8D7+23]\\\\n\\\\tRtlUserThreadStart [0x00007FF906EBC5DC+44]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button lwc-4kb6kaqheak=\"\" class=\"slds-combobox__input slds-input_faux fix-slds-input_faux slds-combobox__input-value\" id=\"combobox-button-5793\" type=\"button\" aria-expanded=\"false\" aria-haspopup=\"listbox\" name=\"salutation\" role=\"combobox\" data-value=\"--None--\" aria-disabled=\"false\" aria-label=\"Salutation\" aria-required=\"false\" part=\"input-button\" aria-controls=\"dropdown-element-5793\">...</button> is not clickable at point (567, 379). Other element would receive the click: <fieldset class=\"slds-form-element slds-no-space\" data-aura-rendered-by=\"728:0\">...</fieldset>\nE         (Session info: chrome=136.0.7103.114)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6C3B4CF25+75717]\nE       \tGetHandleVerifier [0x00007FF6C3B4CF80+75808]\nE       \t(No symbol) [0x00007FF6C3918F9A]\nE       \t(No symbol) [0x00007FF6C3977439]\nE       \t(No symbol) [0x00007FF6C3974DF2]\nE       \t(No symbol) [0x00007FF6C3971EA1]\nE       \t(No symbol) [0x00007FF6C3970DA1]\nE       \t(No symbol) [0x00007FF6C3962394]\nE       \t(No symbol) [0x00007FF6C399737A]\nE       \t(No symbol) [0x00007FF6C3961C46]\nE       \t(No symbol) [0x00007FF6C3997590]\nE       \t(No symbol) [0x00007FF6C39BF39C]\nE       \t(No symbol) [0x00007FF6C3997153]\nE       \t(No symbol) [0x00007FF6C3960421]\nE       \t(No symbol) [0x00007FF6C39611B3]\nE       \tGetHandleVerifier [0x00007FF6C3E4D6FD+3223453]\nE       \tGetHandleVerifier [0x00007FF6C3E47CA2+3200322]\nE       \tGetHandleVerifier [0x00007FF6C3E65AD3+3322739]\nE       \tGetHandleVerifier [0x00007FF6C3B669FA+180890]\nE       \tGetHandleVerifier [0x00007FF6C3B6E0FF+211359]\nE       \tGetHandleVerifier [0x00007FF6C3B55274+109332]\nE       \tGetHandleVerifier [0x00007FF6C3B55422+109762]\nE       \tGetHandleVerifier [0x00007FF6C3B3BA39+4825]\nE       \tBaseThreadInitThunk [0x00007FF90625E8D7+23]\nE       \tRtlUserThreadStart [0x00007FF906EBC5DC+44]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementClickInterceptedException"}, "start": 1748262842632, "stop": 1748262889444, "uuid": "ede2875b-efb8-48a2-9994-e28960bb56f9", "historyId": "be8301b5be649388556af5f3e6659f70", "testCaseId": "be8301b5be649388556af5f3e6659f70", "fullName": "tests.Dakota_Home_Tab.test_role_change_create_contact#test_role_change_creation_of_account", "labels": [{"name": "story", "value": "Test Creation of contacts directly from Role Changes."}, {"name": "feature", "value": "Dakota Home Tab - Role Changes (Create Contact)"}, {"name": "severity", "value": "critical"}, {"name": "tag", "value": "release_two"}, {"name": "tag", "value": "P1"}, {"name": "parentSuite", "value": "tests.Dakota_Home_Tab"}, {"name": "suite", "value": "test_role_change_create_contact"}, {"name": "host", "value": "RT-LT-597"}, {"name": "thread", "value": "21108-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.Dakota_Home_Tab.test_role_change_create_contact"}]}