{"name": "test_field_text", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF6E3411F55+78133]\n\tGetHandleVerifier [0x00007FF6E3411FB0+78224]\n\t(No symbol) [0x00007FF6E31D91BA]\n\t(No symbol) [0x00007FF6E322F19D]\n\t(No symbol) [0x00007FF6E322F44C]\n\t(No symbol) [0x00007FF6E32823D7]\n\t(No symbol) [0x00007FF6E325719F]\n\t(No symbol) [0x00007FF6E327F21F]\n\t(No symbol) [0x00007FF6E3256F33]\n\t(No symbol) [0x00007FF6E3220358]\n\t(No symbol) [0x00007FF6E32210C3]\n\tGetHandleVerifier [0x00007FF6E36DBA8D+3001453]\n\tGetHandleVerifier [0x00007FF6E36D5E72+2977874]\n\tGetHandleVerifier [0x00007FF6E36F497D+3103581]\n\tGetHandleVerifier [0x00007FF6E342C7EA+186826]\n\tGetHandleVerifier [0x00007FF6E34343FF+218591]\n\tGetHandleVerifier [0x00007FF6E3419D94+110452]\n\tGetHandleVerifier [0x00007FF6E3419F42+110882]\n\tGetHandleVerifier [0x00007FF6E3400379+5465]\n\tBaseThreadInitThunk [0x00007FFCA63EE8D7+23]\n\tRtlUserThreadStart [0x00007FFCA72114FC+44]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4ff0ed8e07f23741b07ff1a946b6c5d5\")>\nconfig = {'base_url': 'https://dakotanetworks--fuseupgrad.sandbox.my.salesforce-setup.com/', 'password': 'LOWYqfakgQ8oo', 'uat_...url': 'https://dakotanetworks--uat.sandbox.lightning.force.com/', 'uat_login_url': 'https://test.salesforce.com/', ...}\n\n    @pytest.mark.Skipped\n    @pytest.mark.release_three\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.feature(\"Field Display\")\n    @allure.story(\"Validate that the newly added field is displayed as plain text.\")\n    def test_field_text(driver, config):\n        # Navigate to login page\n        driver.get(config[\"base_url\"])\n        driver.delete_all_cookies()\n        wait = WebDriverWait(driver, 60, poll_frequency=0.5)\n    \n        try:\n            # Perform login\n            username = wait.until(EC.element_to_be_clickable((By.ID, \"username\")))\n            username.send_keys(config[\"username\"])\n            password = wait.until(EC.element_to_be_clickable((By.ID, \"password\")))\n            password.send_keys(config[\"password\"])\n            login_button = wait.until(EC.element_to_be_clickable((By.ID, \"Login\")))\n            time.sleep(2)\n            login_button.click()\n            time.sleep(3)\n    \n            # Wait for URL change\n            wait.until(EC.url_contains(\"lightning.force.com\"))\n    \n            # Verify Login\n            try:\n                WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.XPATH, \"//one-app-nav-bar-item-root[2]\"))).click()\n            except Exception as e:\n                pytest.skip(f\"Skipping test due to unexpected login error: {type(e).__name__}\")\n                driver.quit()\n    \n        except Exception as e:\n            pytest.skip(f\"Skipping test due to unexpected login error: {type(e).__name__}\")\n            driver.quit()\n    \n    \n        with allure.step(\"Waiting for Document Ready State to be Complete\"):\n            WebDriverWait(driver, 90).until(\n                lambda d: print(\"Current Ready State:\", d.execute_script('return document.readyState')) or\n                          d.execute_script('return document.readyState') == 'complete'\n            )\n        print(\"Document Ready State is COMPLETE!\")\n        time.sleep(1)\n    \n    \n        # Navigate to account's object field and relationship page\n        package_url = f\"{config['base_url']}lightning/setup/ObjectManager/Account/FieldsAndRelationships/view\"\n        driver.get(package_url)\n    \n        # Click on New button\n        btn = WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.XPATH, \"//button[@title='Custom Field']\")))\n        time.sleep(1)\n        btn.click()\n    \n        # Switch to iframe\n>       iframe = wait.until(EC.element_to_be_clickable((By.XPATH, \"//iframe[@title='Account: New Custom Field ~ Salesforce - Enterprise Edition']\")))\n\ntests\\New_Field\\test_field_text_account.py:81: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4ff0ed8e07f23741b07ff1a946b6c5d5\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x00000279973CEA20>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6E3411F55+78133]\nE       \tGetHandleVerifier [0x00007FF6E3411FB0+78224]\nE       \t(No symbol) [0x00007FF6E31D91BA]\nE       \t(No symbol) [0x00007FF6E322F19D]\nE       \t(No symbol) [0x00007FF6E322F44C]\nE       \t(No symbol) [0x00007FF6E32823D7]\nE       \t(No symbol) [0x00007FF6E325719F]\nE       \t(No symbol) [0x00007FF6E327F21F]\nE       \t(No symbol) [0x00007FF6E3256F33]\nE       \t(No symbol) [0x00007FF6E3220358]\nE       \t(No symbol) [0x00007FF6E32210C3]\nE       \tGetHandleVerifier [0x00007FF6E36DBA8D+3001453]\nE       \tGetHandleVerifier [0x00007FF6E36D5E72+2977874]\nE       \tGetHandleVerifier [0x00007FF6E36F497D+3103581]\nE       \tGetHandleVerifier [0x00007FF6E342C7EA+186826]\nE       \tGetHandleVerifier [0x00007FF6E34343FF+218591]\nE       \tGetHandleVerifier [0x00007FF6E3419D94+110452]\nE       \tGetHandleVerifier [0x00007FF6E3419F42+110882]\nE       \tGetHandleVerifier [0x00007FF6E3400379+5465]\nE       \tBaseThreadInitThunk [0x00007FFCA63EE8D7+23]\nE       \tRtlUserThreadStart [0x00007FFCA72114FC+44]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "steps": [{"name": "Waiting for Document Ready State to be Complete", "status": "passed", "start": 1745404139373, "stop": 1745404139407}], "start": 1745404110696, "stop": 1745404220785, "uuid": "7904028a-c69b-4372-b80b-42d572ee5471", "historyId": "b06a8226f8a6a9d584968352aec05f05", "testCaseId": "b06a8226f8a6a9d584968352aec05f05", "fullName": "tests.New_Field.test_field_text_account#test_field_text", "labels": [{"name": "story", "value": "Validate that the newly added field is displayed as plain text."}, {"name": "feature", "value": "Field Display"}, {"name": "severity", "value": "critical"}, {"name": "tag", "value": "release_three"}, {"name": "tag", "value": "Skipped"}, {"name": "parentSuite", "value": "tests.New_Field"}, {"name": "suite", "value": "test_field_text_account"}, {"name": "host", "value": "RT-LT-597"}, {"name": "thread", "value": "9800-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.New_Field.test_field_text_account"}]}