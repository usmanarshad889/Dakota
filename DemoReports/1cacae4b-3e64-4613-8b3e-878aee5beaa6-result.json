{"name": "test_picklist_value_addition_to_account_field_type", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: JavaScript code failed\nfrom unknown command: 'Runtime.evaluate' wasn't found\n  (Session info: chrome=135.0.7049.96)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6E3411F55+78133]\n\tGetHandleVerifier [0x00007FF6E3411FB0+78224]\n\t(No symbol) [0x00007FF6E31D91BA]\n\t(No symbol) [0x00007FF6E31C5930]\n\t(No symbol) [0x00007FF6E31C411B]\n\t(No symbol) [0x00007FF6E31C492F]\n\t(No symbol) [0x00007FF6E31EFF7B]\n\t(No symbol) [0x00007FF6E31E35D0]\n\t(No symbol) [0x00007FF6E31E3472]\n\t(No symbol) [0x00007FF6E31B5061]\n\t(No symbol) [0x00007FF6E31B3003]\n\t(No symbol) [0x00007FF6E3297301]\n\t(No symbol) [0x00007FF6E325715A]\n\t(No symbol) [0x00007FF6E327F21F]\n\t(No symbol) [0x00007FF6E3256F33]\n\t(No symbol) [0x00007FF6E3220358]\n\t(No symbol) [0x00007FF6E32210C3]\n\tGetHandleVerifier [0x00007FF6E36DBA8D+3001453]\n\tGetHandleVerifier [0x00007FF6E36D5E72+2977874]\n\tGetHandleVerifier [0x00007FF6E36F497D+3103581]\n\tGetHandleVerifier [0x00007FF6E342C7EA+186826]\n\tGetHandleVerifier [0x00007FF6E34343FF+218591]\n\tGetHandleVerifier [0x00007FF6E3419D94+110452]\n\tGetHandleVerifier [0x00007FF6E3419F42+110882]\n\tGetHandleVerifier [0x00007FF6E3400379+5465]\n\tBaseThreadInitThunk [0x00007FFCA63EE8D7+23]\n\tRtlUserThreadStart [0x00007FFCA72114FC+44]", "trace": "@pytest.fixture(scope=\"module\")\n    def driver():\n        \"\"\"Fixture for setting up WebDriver\"\"\"\n        driver = webdriver.Chrome()\n>       driver.maximize_window()\n\ntests\\Picklist_Vlaues\\test_picklist_value_addition_to_account_field_type.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:536: in maximize_window\n    self.execute(command, None)\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000027996F8E850>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: JavaScript code failed\\\\nfrom un...E3400379+5465]\\\\n\\\\tBaseThreadInitThunk [0x00007FFCA63EE8D7+23]\\\\n\\\\tRtlUserThreadStart [0x00007FFCA72114FC+44]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: JavaScript code failed\nE       from unknown command: 'Runtime.evaluate' wasn't found\nE         (Session info: chrome=135.0.7049.96)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6E3411F55+78133]\nE       \tGetHandleVerifier [0x00007FF6E3411FB0+78224]\nE       \t(No symbol) [0x00007FF6E31D91BA]\nE       \t(No symbol) [0x00007FF6E31C5930]\nE       \t(No symbol) [0x00007FF6E31C411B]\nE       \t(No symbol) [0x00007FF6E31C492F]\nE       \t(No symbol) [0x00007FF6E31EFF7B]\nE       \t(No symbol) [0x00007FF6E31E35D0]\nE       \t(No symbol) [0x00007FF6E31E3472]\nE       \t(No symbol) [0x00007FF6E31B5061]\nE       \t(No symbol) [0x00007FF6E31B3003]\nE       \t(No symbol) [0x00007FF6E3297301]\nE       \t(No symbol) [0x00007FF6E325715A]\nE       \t(No symbol) [0x00007FF6E327F21F]\nE       \t(No symbol) [0x00007FF6E3256F33]\nE       \t(No symbol) [0x00007FF6E3220358]\nE       \t(No symbol) [0x00007FF6E32210C3]\nE       \tGetHandleVerifier [0x00007FF6E36DBA8D+3001453]\nE       \tGetHandleVerifier [0x00007FF6E36D5E72+2977874]\nE       \tGetHandleVerifier [0x00007FF6E36F497D+3103581]\nE       \tGetHandleVerifier [0x00007FF6E342C7EA+186826]\nE       \tGetHandleVerifier [0x00007FF6E34343FF+218591]\nE       \tGetHandleVerifier [0x00007FF6E3419D94+110452]\nE       \tGetHandleVerifier [0x00007FF6E3419F42+110882]\nE       \tGetHandleVerifier [0x00007FF6E3400379+5465]\nE       \tBaseThreadInitThunk [0x00007FFCA63EE8D7+23]\nE       \tRtlUserThreadStart [0x00007FFCA72114FC+44]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: WebDriverException"}, "start": 1745404675027, "stop": 1745404675027, "uuid": "deb66c02-e541-4487-bd4c-c204c17f7119", "historyId": "155fea6064e44e1eac3569c679b61b71", "testCaseId": "155fea6064e44e1eac3569c679b61b71", "fullName": "tests.Picklist_Vlaues.test_picklist_value_addition_to_account_field_type#test_picklist_value_addition_to_account_field_type", "labels": [{"name": "story", "value": "Test the addition of new picklist values via the Sync Account Type Field scheduler."}, {"name": "severity", "value": "critical"}, {"name": "feature", "value": "Picklist Values"}, {"name": "tag", "value": "Skipped"}, {"name": "parentSuite", "value": "tests.Picklist_Vlaues"}, {"name": "suite", "value": "test_picklist_value_addition_to_account_field_type"}, {"name": "host", "value": "RT-LT-597"}, {"name": "thread", "value": "9800-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.Picklist_Vlaues.test_picklist_value_addition_to_account_field_type"}]}