{"name": "test_search_tab_record_loading", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_CLOSED\n  (Session info: chrome=135.0.7049.96)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7C5C51F55+78133]\n\tGetHandleVerifier [0x00007FF7C5C51FB0+78224]\n\t(No symbol) [0x00007FF7C5A191BA]\n\t(No symbol) [0x00007FF7C5A15BB6]\n\t(No symbol) [0x00007FF7C5A06879]\n\t(No symbol) [0x00007FF7C5A085D8]\n\t(No symbol) [0x00007FF7C5A06B86]\n\t(No symbol) [0x00007FF7C5A06606]\n\t(No symbol) [0x00007FF7C5A062CA]\n\t(No symbol) [0x00007FF7C5A03F6A]\n\t(No symbol) [0x00007FF7C5A0474C]\n\t(No symbol) [0x00007FF7C5A1D08A]\n\t(No symbol) [0x00007FF7C5ABFF9E]\n\t(No symbol) [0x00007FF7C5A9715A]\n\t(No symbol) [0x00007FF7C5ABF21F]\n\t(No symbol) [0x00007FF7C5A96F33]\n\t(No symbol) [0x00007FF7C5A60358]\n\t(No symbol) [0x00007FF7C5A610C3]\n\tGetHandleVerifier [0x00007FF7C5F1BA8D+3001453]\n\tGetHandleVerifier [0x00007FF7C5F15E72+2977874]\n\tGetHandleVerifier [0x00007FF7C5F3497D+3103581]\n\tGetHandleVerifier [0x00007FF7C5C6C7EA+186826]\n\tGetHandleVerifier [0x00007FF7C5C743FF+218591]\n\tGetHandleVerifier [0x00007FF7C5C59D94+110452]\n\tGetHandleVerifier [0x00007FF7C5C59F42+110882]\n\tGetHandleVerifier [0x00007FF7C5C40379+5465]\n\tBaseThreadInitThunk [0x00007FFCA63EE8D7+23]\n\tRtlUserThreadStart [0x00007FFCA72114FC+44]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"28d5af1d8239feb3cc4da0c34909dad5\")>\nconfig = {'base_url': 'https://dakotanetworks--fuseupgrad.sandbox.my.salesforce-setup.com/', 'password': 'LOWYqfakgQ8oo', 'uat_...url': 'https://dakotanetworks--uat.sandbox.lightning.force.com/', 'uat_login_url': 'https://test.salesforce.com/', ...}\n\n    @pytest.mark.regression\n    @pytest.mark.regression\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.feature(\"Search Tab\")\n    @allure.story(\"Test the records loading functionality of search tab.\")\n    def test_search_tab_record_loading(driver, config):\n        # Navigate to login page\n>       driver.get(config[\"base_url\"])\n\ntests\\Search_Tab\\test_search_tab_record_loading.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:393: in get\n    self.execute(Command.GET, {\"url\": url})\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001DF0E4DA8F0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_CLOSED\\\\n  (...C5C40379+5465]\\\\n\\\\tBaseThreadInitThunk [0x00007FFCA63EE8D7+23]\\\\n\\\\tRtlUserThreadStart [0x00007FFCA72114FC+44]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_CLOSED\nE         (Session info: chrome=135.0.7049.96)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7C5C51F55+78133]\nE       \tGetHandleVerifier [0x00007FF7C5C51FB0+78224]\nE       \t(No symbol) [0x00007FF7C5A191BA]\nE       \t(No symbol) [0x00007FF7C5A15BB6]\nE       \t(No symbol) [0x00007FF7C5A06879]\nE       \t(No symbol) [0x00007FF7C5A085D8]\nE       \t(No symbol) [0x00007FF7C5A06B86]\nE       \t(No symbol) [0x00007FF7C5A06606]\nE       \t(No symbol) [0x00007FF7C5A062CA]\nE       \t(No symbol) [0x00007FF7C5A03F6A]\nE       \t(No symbol) [0x00007FF7C5A0474C]\nE       \t(No symbol) [0x00007FF7C5A1D08A]\nE       \t(No symbol) [0x00007FF7C5ABFF9E]\nE       \t(No symbol) [0x00007FF7C5A9715A]\nE       \t(No symbol) [0x00007FF7C5ABF21F]\nE       \t(No symbol) [0x00007FF7C5A96F33]\nE       \t(No symbol) [0x00007FF7C5A60358]\nE       \t(No symbol) [0x00007FF7C5A610C3]\nE       \tGetHandleVerifier [0x00007FF7C5F1BA8D+3001453]\nE       \tGetHandleVerifier [0x00007FF7C5F15E72+2977874]\nE       \tGetHandleVerifier [0x00007FF7C5F3497D+3103581]\nE       \tGetHandleVerifier [0x00007FF7C5C6C7EA+186826]\nE       \tGetHandleVerifier [0x00007FF7C5C743FF+218591]\nE       \tGetHandleVerifier [0x00007FF7C5C59D94+110452]\nE       \tGetHandleVerifier [0x00007FF7C5C59F42+110882]\nE       \tGetHandleVerifier [0x00007FF7C5C40379+5465]\nE       \tBaseThreadInitThunk [0x00007FFCA63EE8D7+23]\nE       \tRtlUserThreadStart [0x00007FFCA72114FC+44]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: WebDriverException"}, "start": 1745319480203, "stop": 1745319505521, "uuid": "a1671877-1431-4fc0-9787-79a873f27d43", "historyId": "3c438977f3a3b8fb68cd67cebdf0dd06", "testCaseId": "3c438977f3a3b8fb68cd67cebdf0dd06", "fullName": "tests.Search_Tab.test_search_tab_record_loading#test_search_tab_record_loading", "labels": [{"name": "severity", "value": "critical"}, {"name": "feature", "value": "Search Tab"}, {"name": "story", "value": "Test the records loading functionality of search tab."}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "tests.Search_Tab"}, {"name": "suite", "value": "test_search_tab_record_loading"}, {"name": "host", "value": "RT-LT-597"}, {"name": "thread", "value": "19928-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.Search_Tab.test_search_tab_record_loading"}]}